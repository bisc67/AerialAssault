/**************************************************************************
;==========================================================================
;
; MEMLAYOUT.VSM
;
; Base memory and register layout
;
;==========================================================================
;
; VU1 GLOBAL REGISTER USAGE
;
;==========================================================================
;   VI00    Const (0)
;   VI01
;   VI02
;   VI03
;   VI04
;   VI05
;   VI06
;   VI07
;   VI08
;   VI09    Command param 1
;   VI10    Command param 2
;   VI11    Opcode from latest command
;   VI12    GIF packet buffer base address (for double buffering)
;   VI13    Next command address in input buffer for kernel
;   VI14    Current address of input buffer for kernel
;   VI15    Return address for function calls
;==========================================================================
;   VF00    Const x=0 y=0 z=0 w=1
;   VF01
;   VF02
;   VF03
;   VF04
;   VF05
;   VF06
;   VF07
;   VF08
;   VF09
;   VF10    
;   VF11    
;   VF12    
;   VF13    
;   VF14    
;   VF15    
;   VF16    
;   VF17    
;   VF18    
;   VF19    const Color to copy into the verts
;   VF20    Active local to screen matrix qword 0
;   VF21    Active local to screen matrix qword 1
;   VF22    Active local to screen matrix qword 2
;   VF23    Active local to screen matrix qword 3
;   VF24    Active local to clip matrix qword 0 
;   VF25    Active local to clip matrix qword 1 
;   VF26    Active local to clip matrix qword 2 
;   VF27    Active local to clip matrix qword 3 
;   VF28    Active clip to screen matrix qword 0
;   VF29    Active clip to screen matrix qword 1
;   VF30    Active clip to screen matrix qword 2
;   VF31    Active clip to screen matrix qword 3
;==========================================================================
;
; VU1 MEMORY LAYOUT
;
;==========================================================================
;
;==========================================================================
**************************************************************************/
        
#define VU_DOUBLE_BUFFER_SIZE   		(  285 )                        /* 3 Buffers            */

#define VUMEM_BASE0_PASS                ( VU_DOUBLE_BUFFER_SIZE * 3          )
#define VUMEM_BASE0_PASS_END            ( VUMEM_BASE0_PASS + 10              )

#define VUMEM_BASE1_PASS                ( VUMEM_BASE0_PASS_END               )
#define VUMEM_BASE1_PASS_END            ( VUMEM_BASE1_PASS + 0               ) 

#define VUMEM_LIGHTMAP_FULLCOLOR_PASS   ( VUMEM_BASE1_PASS_END               )
#define VUMEM_LIGHTMAP_FULLCOLOR_END    ( VUMEM_LIGHTMAP_FULLCOLOR_PASS + 10 )
                            
#define VUMEM_LIGHTMAP_MONOCOLOR_PASS   ( VUMEM_LIGHTMAP_FULLCOLOR_END       )
#define VUMEM_LIGHTMAP_MONOCOLOR_END    ( VUMEM_LIGHTMAP_MONOCOLOR_PASS + 4  )

#define VUMEM_FOG_PASS                  ( VUMEM_LIGHTMAP_MONOCOLOR_END       )
#define VUMEM_FOG_PASS_END              ( VUMEM_FOG_PASS + 8                 )

#define VUMEM_CLIPPER                   ( VUMEM_FOG_PASS_END                 )
#define VUMEM_CLIPPER_END               ( VUMEM_CLIPPER + 106                )

#define VUMEM_PASSMASK                  ( VUMEM_CLIPPER_END                  ) 
#define VUMEM_PASSMASK_END              ( VUMEM_PASSMASK + 1                 )

#define VUMEM_MATRICES                  ( VUMEM_PASSMASK_END                 ) 
#define VUMEM_MATRICES_END              ( VUMEM_MATRICES + 21                )

#define VUMEM_GIF_TAG_OFFSET    ( 1022 )		   


        
        

