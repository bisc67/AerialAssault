;==========================================================================
;
; MATRIX.VSM
;
;==========================================================================

;==========================================================================
; Setup current matrices
;==========================================================================

CMD_SET_MASK:

		;
		; Set the double buffer register
		;
        NOP                             XTOP VI14                       ; Get addr of input buffer

		;
        ; Load the mask and store it in the right place
		;
        NOP                             ILW.x VI01, 0(VI14)
        NOP                             ISW.x VI01, VUMEM_PASSMASK(VI00)

		;
        ; Stop
		;
		NOP								NOP
		NOP[E]							NOP
		NOP								NOP
		NOP[D]							NOP
		NOP								NOP

;==========================================================================
; Setup current matrices
;==========================================================================

CMD_SET_MATRICES:
		
		;
		; Set the double buffer register
		;
        NOP                             XTOP VI14                       ; Get addr of input buffer

		;
        ; Load matrices
		;
        NOP                             LQI VF20, (VI14++)         ; L2S
        NOP                             LQI VF21, (VI14++)         ; L2S
        NOP                             LQI VF22, (VI14++)         ; L2S
        NOP                             LQI VF23, (VI14++)         ; L2S

        NOP                             LQI VF24, (VI14++)         ; L2C
        NOP                             LQI VF25, (VI14++)         ; L2C
        NOP                             LQI VF26, (VI14++)         ; L2C
        NOP                             LQI VF27, (VI14++)         ; L2C

        NOP                             LQI VF28, (VI14++)         ; C2S
        NOP                             LQI VF29, (VI14++)         ; C2S
        NOP                             LQI VF30, (VI14++)         ; C2S
        NOP                             LQI VF31, (VI14++)         ; C2S

        ;
        ; Write matrices
        ;
        NOP                             IADDIU VI01, VI00, VUMEM_MATRICES
        NOP                             SQI VF20, (VI01++)         ; L2S
        NOP                             SQI VF21, (VI01++)         ; L2S
        NOP                             SQI VF22, (VI01++)         ; L2S
        NOP                             SQI VF23, (VI01++)         ; L2S

        NOP                             SQI VF24, (VI01++)         ; L2C
        NOP                             SQI VF25, (VI01++)         ; L2C
        NOP                             SQI VF26, (VI01++)         ; L2C
        NOP                             SQI VF27, (VI01++)         ; L2C

        NOP                             SQI VF28, (VI01++)         ; C2S
        NOP                             SQI VF29, (VI01++)         ; C2S
        NOP                             SQI VF30, (VI01++)         ; C2S
        NOP                             SQI VF31, (VI01++)         ; C2S

		;
        ; Load fog
		;
        NOP                             LQI VF20, (VI14++)         ; FOG
        NOP                             LQI VF21, (VI14++)         ; FOG
        NOP                             LQI VF22, (VI14++)         ; FOG
        NOP                             LQI VF23, (VI14++)         ; FOG
        NOP                             LQI VF17, (VI14++)         ; FOGMul
        NOP                             LQI VF18, (VI14++)         ; FOGAdd

        ;
        ; Local eye
        ;
        NOP                             LQI VF19, (VI14++)         ; Eye in local space

		;
		; World eye
		;
		NOP								LQI VF16, (VI14++)			; Eye in world space

		;
        ; Stop
		;
		NOP								NOP
		NOP[E]							NOP
		NOP								NOP
		NOP[D]							NOP
		NOP								NOP

;==========================================================================

;==========================================================================
;
; CMD_LOADMATRICES
;
;==========================================================================
;
; Assuming that data is:
;   L2S, L2C, C2S
;
; Load matrices into registers
;
;==========================================================================
;   VI00    Const (0)
;   VI01
;   VI02
;   VI03
;   VI04
;   VI05
;   VI06
;   VI07
;   VI08
;   VI09    Command param 1
;   VI10    Command param 2
;   VI11    Opcode from latest command
;   VI12    GIF packet buffer base address (for double buffering)
;   VI13    Next command address in input buffer for kernel
;   VI14    Current address of input buffer for kernel
;   VI15    Return address for function calls
;==========================================================================
;   VF00    Const x=0 y=0 z=0 w=1
;   VF01
;   VF02
;   VF03
;   VF04
;   VF05
;   VF06
;   VF07
;   VF08
;   VF09
;   VF10    
;   VF11    
;   VF12    
;   VF13    
;   VF14    
;   VF15    
;   VF16    
;   VF17    
;   VF18    
;   VF19    
;   VF20    Active local to screen matrix qword 0
;   VF21    Active local to screen matrix qword 1
;   VF22    Active local to screen matrix qword 2
;   VF23    Active local to screen matrix qword 3
;   VF24    Active local to clip matrix qword 0 
;   VF25    Active local to clip matrix qword 1 
;   VF26    Active local to clip matrix qword 2 
;   VF27    Active local to clip matrix qword 3 
;   VF28    Active clip to screen matrix qword 0
;   VF29    Active clip to screen matrix qword 1
;   VF30    Active clip to screen matrix qword 2
;   VF31    Active clip to screen matrix qword 3
;==========================================================================

CMD_INITIALIZE:

		;
		; Set the double buffer register
		;
        
        NOP                             XTOP VI14                       ; Get addr of input buffer

		;
        ; Get ptr to source 
		;
        
        NOP                             IADDIU VI05, VI14, 1                ; L2S source
        
		;
		; Load gif tags
		;
        
        NOP                             LQI VF1,  (VI05++)
        NOP                             LQI VF2,  (VI05++)
        NOP                             SQ  VF1,  (VUMEM_GIF_TAG_OFFSET+0)(VI00) 
        NOP                             SQ  VF2,  (VUMEM_GIF_TAG_OFFSET+1)(VI00) 

		;
        ; Stop
		;
		
        NOP								NOP
		NOP[E]							NOP
		NOP								NOP
		NOP[D]							NOP
		NOP								NOP

;==========================================================================
